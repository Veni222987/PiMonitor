name: Spring Boot CI/CD with Docker

on:
  push:
    branches: [main]
    paths:
      - 'server/src/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
          cache-dependency-path: './server/pom.xml' # optional
      
      - name: Build with Maven
        run: mvn clean package
        working-directory: ./server

      # 镜像名称 在当前目录
      - name: Build Docker image
        run: docker build -t pim-server .
        working-directory: ./server
        
      - name: Save Docker image
        run: docker save pim-server > pim-server.tar
        working-directory: ./server
    
      - name: Copy Docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./server/pim-server.tar"
          target: "./temp"

      - name: Load Docker image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: docker load < ./temp/server/pim-server.tar
          
      - name: Run Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker stop pim-server-container || true
            docker rm pim-server-container || true
            
            # 运行新的容器实例
            docker run -d --name pim-server-container \
              -p 8000:8000 \
              pim-server
