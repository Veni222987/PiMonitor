# /src/main/resources/application.yml

# 服务器配置
server:
  address: 0.0.0.0
  port: 8000
  servlet:
    context-path: /api


# spring 配置
spring:
  application:
    name: server
  # 默认dev环境
  profiles:
    active: dev
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB

  # MySQL配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    # 连接池配置
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      max-active: 10 # 最大活跃数量 默认8
      min-idle: 2 # 最小空闲数 默认0
      initial-size: 5 # 初始连接数
      max-wait: 2000 # 获取连接最大等待时间 默认 -1
      validation-query: select 1 # 配置连接池的初始化语句
      validation-query-timeout: 5000
      time-between-eviction-runs-millis: 2000 # 间隔多久进行检测需要关闭的空闲连接
      min-evictable-idle-time-millis: 600000 # 配置连接在池中最小生存的时间
      max-wait-thread-count: 20 # 最大等待线程数

  #reids配置
  data:
    redis:
      database: 1
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD}
      port: ${REDIS_PORT}
      # Lettuce连接池配置
      lettuce:
        pool:
          max-active: 10  # 允许最大连接数，默认8（负值表示没有限制），推荐值：大于cpu * 2，通常为(cpu * 2) + 2
          max-idle: 8     # 最大空闲连接数，默认8，推荐值：cpu * 2
          min-idle: 2     # 最小空闲连接数，默认0
          max-wait: 5s    # 连接用完时，新的请求等待时间(s秒、ms毫秒)，超过该时间抛出异常，默认-1（负值表示没有限制）

  # influxdb 配置
  influx:
    url: ${INFLUXDB_URL}
    token: ${INFLUXDB_TOKEN}
    org: PIM
    bucket: myBucket

  # kafka 配置
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    # 消费者配置
    consumer:
      group-id: pim-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        sasl.mechanism: PLAIN
        security.protocol: SASL_PLAINTEXT
        sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
      max-poll-records: 500 # 每次拉取的最大数量
      auto-commit-interval: 1000
    # 生产者配置
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        sasl.mechanism: PLAIN
        security.protocol: SASL_PLAINTEXT
        sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG}
      retries: 3 # 重试次数
      batch-size: 1000 # 批量发送数据的大小
      buffer-memory: 33554432 # 32M
    # 监听器配置
    listener:
      ack-mode: MANUAL_IMMEDIATE
      type: batch
    jaas:
      login-module:



mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）


justauth:
  enabled: true
  type:
    GITEE:
      client-id: ${GITEE_CLIENT_ID}
      client-secret: ${GITEE_CLIENT_SECRET}
      redirect-uri: https://api.pimonitor.top/gitee/callback
    GITHUB:
      client-id: ${GITHUB_CLIENT_ID}
      client-secret: ${GITHUB_CLIENT_SECRET}
      redirect-uri: https://api.pimonitor.top/github/callback
    WECHAT_OPEN:
      client-id: ${WECHAT_OPEN_CLIENT_ID}
      client-secret: ${WECHAT_OPEN_CLIENT_SECRET}
      redirect-uri: https://api.pimonitor.top/wechat_open/callback

  cache:
    type: default
  http-config:
    timeout: 30000
    proxy:
      GOOGLE:
        type: HTTP
        hostname: 127.0.0.1
        port: 7890

# 阿里云oss,邮件配置
aliyun:
  accessKeyId: ${ALIYUN_ACCESS_KEY_ID}
  accessKeySecret: ${ALIYUN_ACCESS_KEY_SECRET}
  oss:
    endpoint: https://oss-cn-guangzhou.aliyuncs.com
    bucketName: pi-monitor
  email:
    endpoint: dm.aliyuncs.com
    accountName: javaweb@hu1hu.top
    fromAlias: PIM
    subject: 通知
  sms:
    endpoint: dysmsapi.aliyuncs.com
    sign-name: 阿里云短信测试
    template-code: SMS_154950909

jwt:
  tokenHeader: Authorization # JWT 存储的请求头
  secret: "koicmetkij%^238^983$^*$jdn489ciwue^%3847JI&#HJ(*FD^AH#(ASY&H#E)A&#HA(#HJAL)*@#789q3U(*E(3990" # JWT 加解密使用的密钥
  expire: 604800 # JWT 的过期时间，单位秒，604800 = 7天
  tokenHead: ''  # JWT 的开头

# 日志配置
logging:
  level:
    root: info # 日志级别
    org.apache.kafka.clients.consumer.ConsumerConfig: OFF # 关闭kafka消费者配置日志
    org.apache.kafka.clients.producer.ProducerConfig: OFF # 关闭kafka生产者配置日志